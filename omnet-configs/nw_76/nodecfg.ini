[General]

network = nw_76.Nw_76

# =============================
#         1
# =============================

*.MX_1.numApps = 2
*.MX_1.hasOutgoingStreams = true

# =========== Sending ===========

# f9: 1 to 5
*.MX_1.app[0].typename = "UdpBasicApp"
*.MX_1.app[0].display-name = "f9"
*.MX_1.app[0].destAddresses = "MX_5"
*.MX_1.app[0].destPort = 1009
*.MX_1.app[0].messageLength = 363B
*.MX_1.app[0].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f33: 1 to 7
*.MX_1.app[1].typename = "UdpBasicApp"
*.MX_1.app[1].display-name = "f33"
*.MX_1.app[1].destAddresses = "MX_7"
*.MX_1.app[1].destPort = 1033
*.MX_1.app[1].messageLength = 363B
*.MX_1.app[1].sendInterval = gamma_d(1.0350604475635854, 0.00032851691502701856) * 1s

# client stream identification
*.MX_1.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f9", packetFilter: expr(has(udp) && udp.destPort == 1009)},
        {stream: "f33", packetFilter: expr(has(udp) && udp.destPort == 1033)}
    ]

# client stream encoding
*.MX_1.bridging.streamCoder.encoder.mapping = [
        {stream: "f9", pcp: 5, vlan: 19},
        {stream: "f33", pcp: 5, vlan: 43}
    ]

# =========== Receiving ===========
# No flows

# =============================
#         2
# =============================

*.MX_2.numApps = 2
*.MX_2.hasOutgoingStreams = true

# =========== Sending ===========

# f16: 2 to 7
*.MX_2.app[0].typename = "UdpBasicApp"
*.MX_2.app[0].display-name = "f16"
*.MX_2.app[0].destAddresses = "MX_7"
*.MX_2.app[0].destPort = 1016
*.MX_2.app[0].messageLength = 363B
*.MX_2.app[0].sendInterval = gamma_d(1.191393747664863, 1.8260303734757375e-05) * 1s

# f26: 2 to 7
*.MX_2.app[1].typename = "UdpBasicApp"
*.MX_2.app[1].display-name = "f26"
*.MX_2.app[1].destAddresses = "MX_7"
*.MX_2.app[1].destPort = 1026
*.MX_2.app[1].messageLength = 363B
*.MX_2.app[1].sendInterval = gamma_d(1.1734603241325396, 1.8682737412585335e-05) * 1s

# client stream identification
*.MX_2.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f16", packetFilter: expr(has(udp) && udp.destPort == 1016)},
        {stream: "f26", packetFilter: expr(has(udp) && udp.destPort == 1026)}
    ]

# client stream encoding
*.MX_2.bridging.streamCoder.encoder.mapping = [
        {stream: "f16", pcp: 5, vlan: 26},
        {stream: "f26", pcp: 5, vlan: 36}
    ]

# =========== Receiving ===========
# No flows

# =============================
#         3
# =============================

*.MX_3.numApps = 7
*.MX_3.hasOutgoingStreams = true

# =========== Sending ===========

# f8: 3 to 9
*.MX_3.app[0].typename = "UdpBasicApp"
*.MX_3.app[0].display-name = "f8"
*.MX_3.app[0].destAddresses = "MX_9"
*.MX_3.app[0].destPort = 1008
*.MX_3.app[0].messageLength = 363B
*.MX_3.app[0].sendInterval = gamma_d(1.1418821401358443, 2.99329309905272e-05) * 1s

# f19: 3 to 12
*.MX_3.app[1].typename = "UdpBasicApp"
*.MX_3.app[1].display-name = "f19"
*.MX_3.app[1].destAddresses = "MX_12"
*.MX_3.app[1].destPort = 1019
*.MX_3.app[1].messageLength = 363B
*.MX_3.app[1].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f24: 3 to 9
*.MX_3.app[2].typename = "UdpBasicApp"
*.MX_3.app[2].display-name = "f24"
*.MX_3.app[2].destAddresses = "MX_9"
*.MX_3.app[2].destPort = 1024
*.MX_3.app[2].messageLength = 363B
*.MX_3.app[2].sendInterval = gamma_d(1.1315002443128392, 3.0214855252437476e-05) * 1s

# f25: 3 to 7
*.MX_3.app[3].typename = "UdpBasicApp"
*.MX_3.app[3].display-name = "f25"
*.MX_3.app[3].destAddresses = "MX_7"
*.MX_3.app[3].destPort = 1025
*.MX_3.app[3].messageLength = 363B
*.MX_3.app[3].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f31: 3 to 5
*.MX_3.app[4].typename = "UdpBasicApp"
*.MX_3.app[4].display-name = "f31"
*.MX_3.app[4].destAddresses = "MX_5"
*.MX_3.app[4].destPort = 1031
*.MX_3.app[4].messageLength = 363B
*.MX_3.app[4].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f37: 3 to 13
*.MX_3.app[5].typename = "UdpBasicApp"
*.MX_3.app[5].display-name = "f37"
*.MX_3.app[5].destAddresses = "MX_13"
*.MX_3.app[5].destPort = 1037
*.MX_3.app[5].messageLength = 363B
*.MX_3.app[5].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f39: 3 to 9
*.MX_3.app[6].typename = "UdpBasicApp"
*.MX_3.app[6].display-name = "f39"
*.MX_3.app[6].destAddresses = "MX_9"
*.MX_3.app[6].destPort = 1039
*.MX_3.app[6].messageLength = 363B
*.MX_3.app[6].sendInterval = gamma_d(1.1299230787348788, 3.0196522172297663e-05) * 1s

# client stream identification
*.MX_3.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f8", packetFilter: expr(has(udp) && udp.destPort == 1008)},
        {stream: "f19", packetFilter: expr(has(udp) && udp.destPort == 1019)},
        {stream: "f24", packetFilter: expr(has(udp) && udp.destPort == 1024)},
        {stream: "f25", packetFilter: expr(has(udp) && udp.destPort == 1025)},
        {stream: "f31", packetFilter: expr(has(udp) && udp.destPort == 1031)},
        {stream: "f37", packetFilter: expr(has(udp) && udp.destPort == 1037)},
        {stream: "f39", packetFilter: expr(has(udp) && udp.destPort == 1039)}
    ]

# client stream encoding
*.MX_3.bridging.streamCoder.encoder.mapping = [
        {stream: "f8", pcp: 5, vlan: 18},
        {stream: "f19", pcp: 5, vlan: 29},
        {stream: "f24", pcp: 5, vlan: 34},
        {stream: "f25", pcp: 5, vlan: 35},
        {stream: "f31", pcp: 5, vlan: 41},
        {stream: "f37", pcp: 5, vlan: 47},
        {stream: "f39", pcp: 5, vlan: 49}
    ]

# =========== Receiving ===========
# No flows

# =============================
#         4
# =============================

*.MX_4.numApps = 4
*.MX_4.hasOutgoingStreams = true

# =========== Sending ===========

# f0: 4 to 10
*.MX_4.app[0].typename = "UdpBasicApp"
*.MX_4.app[0].display-name = "f0"
*.MX_4.app[0].destAddresses = "MX_10"
*.MX_4.app[0].destPort = 1000
*.MX_4.app[0].messageLength = 363B
*.MX_4.app[0].sendInterval = gamma_d(1.189853134671804, 1.763189438155802e-05) * 1s

# f6: 4 to 5
*.MX_4.app[1].typename = "UdpBasicApp"
*.MX_4.app[1].display-name = "f6"
*.MX_4.app[1].destAddresses = "MX_5"
*.MX_4.app[1].destPort = 1006
*.MX_4.app[1].messageLength = 363B
*.MX_4.app[1].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f20: 4 to 11
*.MX_4.app[2].typename = "UdpBasicApp"
*.MX_4.app[2].display-name = "f20"
*.MX_4.app[2].destAddresses = "MX_11"
*.MX_4.app[2].destPort = 1020
*.MX_4.app[2].messageLength = 363B
*.MX_4.app[2].sendInterval = gamma_d(1.184106465785932, 1.6745215800134303e-05) * 1s

# f30: 4 to 7
*.MX_4.app[3].typename = "UdpBasicApp"
*.MX_4.app[3].display-name = "f30"
*.MX_4.app[3].destAddresses = "MX_7"
*.MX_4.app[3].destPort = 1030
*.MX_4.app[3].messageLength = 363B
*.MX_4.app[3].sendInterval = gamma_d(1.0004045783933297, 0.00017499135597830789) * 1s

# client stream identification
*.MX_4.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f0", packetFilter: expr(has(udp) && udp.destPort == 1000)},
        {stream: "f6", packetFilter: expr(has(udp) && udp.destPort == 1006)},
        {stream: "f20", packetFilter: expr(has(udp) && udp.destPort == 1020)},
        {stream: "f30", packetFilter: expr(has(udp) && udp.destPort == 1030)}
    ]

# client stream encoding
*.MX_4.bridging.streamCoder.encoder.mapping = [
        {stream: "f0", pcp: 5, vlan: 10},
        {stream: "f6", pcp: 5, vlan: 16},
        {stream: "f20", pcp: 5, vlan: 30},
        {stream: "f30", pcp: 5, vlan: 40}
    ]

# =========== Receiving ===========
# No flows

# =============================
#         5
# =============================

*.MX_5.numApps = 12
*.MX_5.hasOutgoingStreams = true

# =========== Sending ===========

# f1: 5 to 14
*.MX_5.app[0].typename = "UdpBasicApp"
*.MX_5.app[0].display-name = "f1"
*.MX_5.app[0].destAddresses = "MX_14"
*.MX_5.app[0].destPort = 1001
*.MX_5.app[0].messageLength = 363B
*.MX_5.app[0].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f3: 5 to 13
*.MX_5.app[1].typename = "UdpBasicApp"
*.MX_5.app[1].display-name = "f3"
*.MX_5.app[1].destAddresses = "MX_13"
*.MX_5.app[1].destPort = 1003
*.MX_5.app[1].messageLength = 363B
*.MX_5.app[1].sendInterval = gamma_d(1.1758642271748299, 2.5236468900312665e-05) * 1s

# f7: 5 to 14
*.MX_5.app[2].typename = "UdpBasicApp"
*.MX_5.app[2].display-name = "f7"
*.MX_5.app[2].destAddresses = "MX_14"
*.MX_5.app[2].destPort = 1007
*.MX_5.app[2].messageLength = 363B
*.MX_5.app[2].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f13: 5 to 14
*.MX_5.app[3].typename = "UdpBasicApp"
*.MX_5.app[3].display-name = "f13"
*.MX_5.app[3].destAddresses = "MX_14"
*.MX_5.app[3].destPort = 1013
*.MX_5.app[3].messageLength = 363B
*.MX_5.app[3].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f17: 5 to 14
*.MX_5.app[4].typename = "UdpBasicApp"
*.MX_5.app[4].display-name = "f17"
*.MX_5.app[4].destAddresses = "MX_14"
*.MX_5.app[4].destPort = 1017
*.MX_5.app[4].messageLength = 363B
*.MX_5.app[4].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f21: 5 to 12
*.MX_5.app[5].typename = "UdpBasicApp"
*.MX_5.app[5].display-name = "f21"
*.MX_5.app[5].destAddresses = "MX_12"
*.MX_5.app[5].destPort = 1021
*.MX_5.app[5].messageLength = 363B
*.MX_5.app[5].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f23: 5 to 14
*.MX_5.app[6].typename = "UdpBasicApp"
*.MX_5.app[6].display-name = "f23"
*.MX_5.app[6].destAddresses = "MX_14"
*.MX_5.app[6].destPort = 1023
*.MX_5.app[6].messageLength = 363B
*.MX_5.app[6].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f32: 5 to 14
*.MX_5.app[7].typename = "UdpBasicApp"
*.MX_5.app[7].display-name = "f32"
*.MX_5.app[7].destAddresses = "MX_14"
*.MX_5.app[7].destPort = 1032
*.MX_5.app[7].messageLength = 363B
*.MX_5.app[7].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f40: 5 to 11
*.MX_5.app[8].typename = "UdpBasicApp"
*.MX_5.app[8].display-name = "f40"
*.MX_5.app[8].destAddresses = "MX_11"
*.MX_5.app[8].destPort = 1040
*.MX_5.app[8].messageLength = 363B
*.MX_5.app[8].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# client stream identification
*.MX_5.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f1", packetFilter: expr(has(udp) && udp.destPort == 1001)},
        {stream: "f3", packetFilter: expr(has(udp) && udp.destPort == 1003)},
        {stream: "f7", packetFilter: expr(has(udp) && udp.destPort == 1007)},
        {stream: "f13", packetFilter: expr(has(udp) && udp.destPort == 1013)},
        {stream: "f17", packetFilter: expr(has(udp) && udp.destPort == 1017)},
        {stream: "f21", packetFilter: expr(has(udp) && udp.destPort == 1021)},
        {stream: "f23", packetFilter: expr(has(udp) && udp.destPort == 1023)},
        {stream: "f32", packetFilter: expr(has(udp) && udp.destPort == 1032)},
        {stream: "f40", packetFilter: expr(has(udp) && udp.destPort == 1040)}
    ]

# client stream encoding
*.MX_5.bridging.streamCoder.encoder.mapping = [
        {stream: "f1", pcp: 5, vlan: 11},
        {stream: "f3", pcp: 5, vlan: 13},
        {stream: "f7", pcp: 5, vlan: 17},
        {stream: "f13", pcp: 5, vlan: 23},
        {stream: "f17", pcp: 5, vlan: 27},
        {stream: "f21", pcp: 5, vlan: 31},
        {stream: "f23", pcp: 5, vlan: 33},
        {stream: "f32", pcp: 5, vlan: 42},
        {stream: "f40", pcp: 5, vlan: 50}
    ]

# =========== Receiving ===========

# f6: 5 from 4
*.MX_5.app[9].typename = "UdpSinkApp"
*.MX_5.app[9].io.localPort = 1006

# f9: 5 from 1
*.MX_5.app[10].typename = "UdpSinkApp"
*.MX_5.app[10].io.localPort = 1009

# f31: 5 from 3
*.MX_5.app[11].typename = "UdpSinkApp"
*.MX_5.app[11].io.localPort = 1031

# =============================
#         6
# =============================

*.MX_6.numApps = 3
*.MX_6.hasOutgoingStreams = true

# =========== Sending ===========

# f18: 6 to 14
*.MX_6.app[0].typename = "UdpBasicApp"
*.MX_6.app[0].display-name = "f18"
*.MX_6.app[0].destAddresses = "MX_14"
*.MX_6.app[0].destPort = 1018
*.MX_6.app[0].messageLength = 363B
*.MX_6.app[0].sendInterval = gamma_d(1.0551447458604295, 0.00017006034148768598) * 1s

# f29: 6 to 14
*.MX_6.app[1].typename = "UdpBasicApp"
*.MX_6.app[1].display-name = "f29"
*.MX_6.app[1].destAddresses = "MX_14"
*.MX_6.app[1].destPort = 1029
*.MX_6.app[1].messageLength = 363B
*.MX_6.app[1].sendInterval = gamma_d(1.0418422975043982, 0.00027004776584120375) * 1s

# f34: 6 to 14
*.MX_6.app[2].typename = "UdpBasicApp"
*.MX_6.app[2].display-name = "f34"
*.MX_6.app[2].destAddresses = "MX_14"
*.MX_6.app[2].destPort = 1034
*.MX_6.app[2].messageLength = 363B
*.MX_6.app[2].sendInterval = gamma_d(1.0384183144826777, 0.00026696506459257237) * 1s

# client stream identification
*.MX_6.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f18", packetFilter: expr(has(udp) && udp.destPort == 1018)},
        {stream: "f29", packetFilter: expr(has(udp) && udp.destPort == 1029)},
        {stream: "f34", packetFilter: expr(has(udp) && udp.destPort == 1034)}
    ]

# client stream encoding
*.MX_6.bridging.streamCoder.encoder.mapping = [
        {stream: "f18", pcp: 5, vlan: 28},
        {stream: "f29", pcp: 5, vlan: 39},
        {stream: "f34", pcp: 5, vlan: 44}
    ]

# =========== Receiving ===========
# No flows

# =============================
#         7
# =============================

*.MX_7.numApps = 7
*.MX_7.hasOutgoingStreams = true

# =========== Sending ===========

# f4: 7 to 14
*.MX_7.app[0].typename = "UdpBasicApp"
*.MX_7.app[0].display-name = "f4"
*.MX_7.app[0].destAddresses = "MX_14"
*.MX_7.app[0].destPort = 1004
*.MX_7.app[0].messageLength = 363B
*.MX_7.app[0].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f11: 7 to 14
*.MX_7.app[1].typename = "UdpBasicApp"
*.MX_7.app[1].display-name = "f11"
*.MX_7.app[1].destAddresses = "MX_14"
*.MX_7.app[1].destPort = 1011
*.MX_7.app[1].messageLength = 363B
*.MX_7.app[1].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# client stream identification
*.MX_7.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f4", packetFilter: expr(has(udp) && udp.destPort == 1004)},
        {stream: "f11", packetFilter: expr(has(udp) && udp.destPort == 1011)}
    ]

# client stream encoding
*.MX_7.bridging.streamCoder.encoder.mapping = [
        {stream: "f4", pcp: 5, vlan: 14},
        {stream: "f11", pcp: 5, vlan: 21}
    ]

# =========== Receiving ===========

# f16: 7 from 2
*.MX_7.app[2].typename = "UdpSinkApp"
*.MX_7.app[2].io.localPort = 1016

# f25: 7 from 3
*.MX_7.app[3].typename = "UdpSinkApp"
*.MX_7.app[3].io.localPort = 1025

# f26: 7 from 2
*.MX_7.app[4].typename = "UdpSinkApp"
*.MX_7.app[4].io.localPort = 1026

# f30: 7 from 4
*.MX_7.app[5].typename = "UdpSinkApp"
*.MX_7.app[5].io.localPort = 1030

# f33: 7 from 1
*.MX_7.app[6].typename = "UdpSinkApp"
*.MX_7.app[6].io.localPort = 1033

# =============================
#         9
# =============================

*.MX_9.numApps = 7
*.MX_9.hasOutgoingStreams = true

# =========== Sending ===========

# f27: 9 to 14
*.MX_9.app[0].typename = "UdpBasicApp"
*.MX_9.app[0].display-name = "f27"
*.MX_9.app[0].destAddresses = "MX_14"
*.MX_9.app[0].destPort = 1027
*.MX_9.app[0].messageLength = 363B
*.MX_9.app[0].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f35: 9 to 14
*.MX_9.app[1].typename = "UdpBasicApp"
*.MX_9.app[1].display-name = "f35"
*.MX_9.app[1].destAddresses = "MX_14"
*.MX_9.app[1].destPort = 1035
*.MX_9.app[1].messageLength = 363B
*.MX_9.app[1].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f36: 9 to 14
*.MX_9.app[2].typename = "UdpBasicApp"
*.MX_9.app[2].display-name = "f36"
*.MX_9.app[2].destAddresses = "MX_14"
*.MX_9.app[2].destPort = 1036
*.MX_9.app[2].messageLength = 363B
*.MX_9.app[2].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f38: 9 to 14
*.MX_9.app[3].typename = "UdpBasicApp"
*.MX_9.app[3].display-name = "f38"
*.MX_9.app[3].destAddresses = "MX_14"
*.MX_9.app[3].destPort = 1038
*.MX_9.app[3].messageLength = 363B
*.MX_9.app[3].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# client stream identification
*.MX_9.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f27", packetFilter: expr(has(udp) && udp.destPort == 1027)},
        {stream: "f35", packetFilter: expr(has(udp) && udp.destPort == 1035)},
        {stream: "f36", packetFilter: expr(has(udp) && udp.destPort == 1036)},
        {stream: "f38", packetFilter: expr(has(udp) && udp.destPort == 1038)}
    ]

# client stream encoding
*.MX_9.bridging.streamCoder.encoder.mapping = [
        {stream: "f27", pcp: 5, vlan: 37},
        {stream: "f35", pcp: 5, vlan: 45},
        {stream: "f36", pcp: 5, vlan: 46},
        {stream: "f38", pcp: 5, vlan: 48}
    ]

# =========== Receiving ===========

# f8: 9 from 3
*.MX_9.app[4].typename = "UdpSinkApp"
*.MX_9.app[4].io.localPort = 1008

# f24: 9 from 3
*.MX_9.app[5].typename = "UdpSinkApp"
*.MX_9.app[5].io.localPort = 1024

# f39: 9 from 3
*.MX_9.app[6].typename = "UdpSinkApp"
*.MX_9.app[6].io.localPort = 1039

# =============================
#         10
# =============================

*.MX_10.numApps = 3
*.MX_10.hasOutgoingStreams = true

# =========== Sending ===========

# f2: 10 to 14
*.MX_10.app[0].typename = "UdpBasicApp"
*.MX_10.app[0].display-name = "f2"
*.MX_10.app[0].destAddresses = "MX_14"
*.MX_10.app[0].destPort = 1002
*.MX_10.app[0].messageLength = 363B
*.MX_10.app[0].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f15: 10 to 14
*.MX_10.app[1].typename = "UdpBasicApp"
*.MX_10.app[1].display-name = "f15"
*.MX_10.app[1].destAddresses = "MX_14"
*.MX_10.app[1].destPort = 1015
*.MX_10.app[1].messageLength = 363B
*.MX_10.app[1].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# client stream identification
*.MX_10.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f2", packetFilter: expr(has(udp) && udp.destPort == 1002)},
        {stream: "f15", packetFilter: expr(has(udp) && udp.destPort == 1015)}
    ]

# client stream encoding
*.MX_10.bridging.streamCoder.encoder.mapping = [
        {stream: "f2", pcp: 5, vlan: 12},
        {stream: "f15", pcp: 5, vlan: 25}
    ]

# =========== Receiving ===========

# f0: 10 from 4
*.MX_10.app[2].typename = "UdpSinkApp"
*.MX_10.app[2].io.localPort = 1000

# =============================
#         11
# =============================

*.MX_11.numApps = 4
*.MX_11.hasOutgoingStreams = true

# =========== Sending ===========

# f22: 11 to 14
*.MX_11.app[0].typename = "UdpBasicApp"
*.MX_11.app[0].display-name = "f22"
*.MX_11.app[0].destAddresses = "MX_14"
*.MX_11.app[0].destPort = 1022
*.MX_11.app[0].messageLength = 363B
*.MX_11.app[0].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f28: 11 to 14
*.MX_11.app[1].typename = "UdpBasicApp"
*.MX_11.app[1].display-name = "f28"
*.MX_11.app[1].destAddresses = "MX_14"
*.MX_11.app[1].destPort = 1028
*.MX_11.app[1].messageLength = 363B
*.MX_11.app[1].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# client stream identification
*.MX_11.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f22", packetFilter: expr(has(udp) && udp.destPort == 1022)},
        {stream: "f28", packetFilter: expr(has(udp) && udp.destPort == 1028)}
    ]

# client stream encoding
*.MX_11.bridging.streamCoder.encoder.mapping = [
        {stream: "f22", pcp: 5, vlan: 32},
        {stream: "f28", pcp: 5, vlan: 38}
    ]

# =========== Receiving ===========

# f20: 11 from 4
*.MX_11.app[2].typename = "UdpSinkApp"
*.MX_11.app[2].io.localPort = 1020

# f40: 11 from 5
*.MX_11.app[3].typename = "UdpSinkApp"
*.MX_11.app[3].io.localPort = 1040

# =============================
#         12
# =============================

*.MX_12.numApps = 6
*.MX_12.hasOutgoingStreams = true

# =========== Sending ===========

# f5: 12 to 14
*.MX_12.app[0].typename = "UdpBasicApp"
*.MX_12.app[0].display-name = "f5"
*.MX_12.app[0].destAddresses = "MX_14"
*.MX_12.app[0].destPort = 1005
*.MX_12.app[0].messageLength = 363B
*.MX_12.app[0].sendInterval = gamma_d(1.1366589740388309, 2.472904313604818e-05) * 1s

# f10: 12 to 14
*.MX_12.app[1].typename = "UdpBasicApp"
*.MX_12.app[1].display-name = "f10"
*.MX_12.app[1].destAddresses = "MX_14"
*.MX_12.app[1].destPort = 1010
*.MX_12.app[1].messageLength = 363B
*.MX_12.app[1].sendInterval = gamma_d(1.1366589740388309, 2.472904313604818e-05) * 1s

# f12: 12 to 14
*.MX_12.app[2].typename = "UdpBasicApp"
*.MX_12.app[2].display-name = "f12"
*.MX_12.app[2].destAddresses = "MX_14"
*.MX_12.app[2].destPort = 1012
*.MX_12.app[2].messageLength = 363B
*.MX_12.app[2].sendInterval = gamma_d(1.12838586695397, 2.4390888353087362e-05) * 1s

# f14: 12 to 14
*.MX_12.app[3].typename = "UdpBasicApp"
*.MX_12.app[3].display-name = "f14"
*.MX_12.app[3].destAddresses = "MX_14"
*.MX_12.app[3].destPort = 1014
*.MX_12.app[3].messageLength = 363B
*.MX_12.app[3].sendInterval = gamma_d(1.0897183028985085, 2.550982370953007e-05) * 1s

# client stream identification
*.MX_12.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f5", packetFilter: expr(has(udp) && udp.destPort == 1005)},
        {stream: "f10", packetFilter: expr(has(udp) && udp.destPort == 1010)},
        {stream: "f12", packetFilter: expr(has(udp) && udp.destPort == 1012)},
        {stream: "f14", packetFilter: expr(has(udp) && udp.destPort == 1014)}
    ]

# client stream encoding
*.MX_12.bridging.streamCoder.encoder.mapping = [
        {stream: "f5", pcp: 5, vlan: 15},
        {stream: "f10", pcp: 5, vlan: 20},
        {stream: "f12", pcp: 5, vlan: 22},
        {stream: "f14", pcp: 5, vlan: 24}
    ]

# =========== Receiving ===========

# f19: 12 from 3
*.MX_12.app[4].typename = "UdpSinkApp"
*.MX_12.app[4].io.localPort = 1019

# f21: 12 from 5
*.MX_12.app[5].typename = "UdpSinkApp"
*.MX_12.app[5].io.localPort = 1021

# =============================
#         13
# =============================

*.MX_13.numApps = 2
*.MX_13.hasOutgoingStreams = false

# =========== Sending ===========

# No flows

# =========== Receiving ===========

# f3: 13 from 5
*.MX_13.app[0].typename = "UdpSinkApp"
*.MX_13.app[0].io.localPort = 1003

# f37: 13 from 3
*.MX_13.app[1].typename = "UdpSinkApp"
*.MX_13.app[1].io.localPort = 1037

# =============================
#         14
# =============================

*.MX_14.numApps = 23
*.MX_14.hasOutgoingStreams = false

# =========== Sending ===========

# No flows

# =========== Receiving ===========

# f1: 14 from 5
*.MX_14.app[0].typename = "UdpSinkApp"
*.MX_14.app[0].io.localPort = 1001

# f2: 14 from 10
*.MX_14.app[1].typename = "UdpSinkApp"
*.MX_14.app[1].io.localPort = 1002

# f4: 14 from 7
*.MX_14.app[2].typename = "UdpSinkApp"
*.MX_14.app[2].io.localPort = 1004

# f5: 14 from 12
*.MX_14.app[3].typename = "UdpSinkApp"
*.MX_14.app[3].io.localPort = 1005

# f7: 14 from 5
*.MX_14.app[4].typename = "UdpSinkApp"
*.MX_14.app[4].io.localPort = 1007

# f10: 14 from 12
*.MX_14.app[5].typename = "UdpSinkApp"
*.MX_14.app[5].io.localPort = 1010

# f11: 14 from 7
*.MX_14.app[6].typename = "UdpSinkApp"
*.MX_14.app[6].io.localPort = 1011

# f12: 14 from 12
*.MX_14.app[7].typename = "UdpSinkApp"
*.MX_14.app[7].io.localPort = 1012

# f13: 14 from 5
*.MX_14.app[8].typename = "UdpSinkApp"
*.MX_14.app[8].io.localPort = 1013

# f14: 14 from 12
*.MX_14.app[9].typename = "UdpSinkApp"
*.MX_14.app[9].io.localPort = 1014

# f15: 14 from 10
*.MX_14.app[10].typename = "UdpSinkApp"
*.MX_14.app[10].io.localPort = 1015

# f17: 14 from 5
*.MX_14.app[11].typename = "UdpSinkApp"
*.MX_14.app[11].io.localPort = 1017

# f18: 14 from 6
*.MX_14.app[12].typename = "UdpSinkApp"
*.MX_14.app[12].io.localPort = 1018

# f22: 14 from 11
*.MX_14.app[13].typename = "UdpSinkApp"
*.MX_14.app[13].io.localPort = 1022

# f23: 14 from 5
*.MX_14.app[14].typename = "UdpSinkApp"
*.MX_14.app[14].io.localPort = 1023

# f27: 14 from 9
*.MX_14.app[15].typename = "UdpSinkApp"
*.MX_14.app[15].io.localPort = 1027

# f28: 14 from 11
*.MX_14.app[16].typename = "UdpSinkApp"
*.MX_14.app[16].io.localPort = 1028

# f29: 14 from 6
*.MX_14.app[17].typename = "UdpSinkApp"
*.MX_14.app[17].io.localPort = 1029

# f32: 14 from 5
*.MX_14.app[18].typename = "UdpSinkApp"
*.MX_14.app[18].io.localPort = 1032

# f34: 14 from 6
*.MX_14.app[19].typename = "UdpSinkApp"
*.MX_14.app[19].io.localPort = 1034

# f35: 14 from 9
*.MX_14.app[20].typename = "UdpSinkApp"
*.MX_14.app[20].io.localPort = 1035

# f36: 14 from 9
*.MX_14.app[21].typename = "UdpSinkApp"
*.MX_14.app[21].io.localPort = 1036

# f38: 14 from 9
*.MX_14.app[22].typename = "UdpSinkApp"
*.MX_14.app[22].io.localPort = 1038

