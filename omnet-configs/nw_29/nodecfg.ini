[General]

network = nw_29.Nw_29

# =============================
#         1
# =============================

*.MX_1.numApps = 6
*.MX_1.hasOutgoingStreams = true

# =========== Sending ===========

# f1: 1 to 10
*.MX_1.app[0].typename = "UdpBasicApp"
*.MX_1.app[0].display-name = "f1"
*.MX_1.app[0].destAddresses = "MX_10"
*.MX_1.app[0].destPort = 1001
*.MX_1.app[0].messageLength = 363B
*.MX_1.app[0].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f12: 1 to 10
*.MX_1.app[1].typename = "UdpBasicApp"
*.MX_1.app[1].display-name = "f12"
*.MX_1.app[1].destAddresses = "MX_10"
*.MX_1.app[1].destPort = 1012
*.MX_1.app[1].messageLength = 363B
*.MX_1.app[1].sendInterval = gamma_d(1.0153799823003078, 0.00022512987677989526) * 1s

# f13: 1 to 9
*.MX_1.app[2].typename = "UdpBasicApp"
*.MX_1.app[2].display-name = "f13"
*.MX_1.app[2].destAddresses = "MX_9"
*.MX_1.app[2].destPort = 1013
*.MX_1.app[2].messageLength = 363B
*.MX_1.app[2].sendInterval = gamma_d(1.2689114048842924, 7.264303059005698e-06) * 1s

# f20: 1 to 10
*.MX_1.app[3].typename = "UdpBasicApp"
*.MX_1.app[3].display-name = "f20"
*.MX_1.app[3].destAddresses = "MX_10"
*.MX_1.app[3].destPort = 1020
*.MX_1.app[3].messageLength = 363B
*.MX_1.app[3].sendInterval = gamma_d(1.0153799823003078, 0.00022512987677989526) * 1s

# f21: 1 to 10
*.MX_1.app[4].typename = "UdpBasicApp"
*.MX_1.app[4].display-name = "f21"
*.MX_1.app[4].destAddresses = "MX_10"
*.MX_1.app[4].destPort = 1021
*.MX_1.app[4].messageLength = 363B
*.MX_1.app[4].sendInterval = gamma_d(1.0153799823003078, 0.00022512987677989526) * 1s

# f26: 1 to 10
*.MX_1.app[5].typename = "UdpBasicApp"
*.MX_1.app[5].display-name = "f26"
*.MX_1.app[5].destAddresses = "MX_10"
*.MX_1.app[5].destPort = 1026
*.MX_1.app[5].messageLength = 363B
*.MX_1.app[5].sendInterval = gamma_d(1.0153799823003078, 0.00022512987677989526) * 1s

# client stream identification
*.MX_1.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f1", packetFilter: expr(has(udp) && udp.destPort == 1001)},
        {stream: "f12", packetFilter: expr(has(udp) && udp.destPort == 1012)},
        {stream: "f13", packetFilter: expr(has(udp) && udp.destPort == 1013)},
        {stream: "f20", packetFilter: expr(has(udp) && udp.destPort == 1020)},
        {stream: "f21", packetFilter: expr(has(udp) && udp.destPort == 1021)},
        {stream: "f26", packetFilter: expr(has(udp) && udp.destPort == 1026)}
    ]

# client stream encoding
*.MX_1.bridging.streamCoder.encoder.mapping = [
        {stream: "f1", pcp: 5, vlan: 11},
        {stream: "f12", pcp: 5, vlan: 22},
        {stream: "f13", pcp: 5, vlan: 23},
        {stream: "f20", pcp: 5, vlan: 30},
        {stream: "f21", pcp: 5, vlan: 31},
        {stream: "f26", pcp: 5, vlan: 36}
    ]

# =========== Receiving ===========
# No flows

# =============================
#         3
# =============================

*.MX_3.numApps = 2
*.MX_3.hasOutgoingStreams = true

# =========== Sending ===========

# f8: 3 to 9
*.MX_3.app[0].typename = "UdpBasicApp"
*.MX_3.app[0].display-name = "f8"
*.MX_3.app[0].destAddresses = "MX_9"
*.MX_3.app[0].destPort = 1008
*.MX_3.app[0].messageLength = 363B
*.MX_3.app[0].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f16: 3 to 12
*.MX_3.app[1].typename = "UdpBasicApp"
*.MX_3.app[1].display-name = "f16"
*.MX_3.app[1].destAddresses = "MX_12"
*.MX_3.app[1].destPort = 1016
*.MX_3.app[1].messageLength = 363B
*.MX_3.app[1].sendInterval = gamma_d(1.2057560273291001, 1.1020002304641188e-05) * 1s

# client stream identification
*.MX_3.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f8", packetFilter: expr(has(udp) && udp.destPort == 1008)},
        {stream: "f16", packetFilter: expr(has(udp) && udp.destPort == 1016)}
    ]

# client stream encoding
*.MX_3.bridging.streamCoder.encoder.mapping = [
        {stream: "f8", pcp: 5, vlan: 18},
        {stream: "f16", pcp: 5, vlan: 26}
    ]

# =========== Receiving ===========
# No flows

# =============================
#         4
# =============================

*.MX_4.numApps = 1
*.MX_4.hasOutgoingStreams = true

# =========== Sending ===========

# f28: 4 to 9
*.MX_4.app[0].typename = "UdpBasicApp"
*.MX_4.app[0].display-name = "f28"
*.MX_4.app[0].destAddresses = "MX_9"
*.MX_4.app[0].destPort = 1028
*.MX_4.app[0].messageLength = 363B
*.MX_4.app[0].sendInterval = gamma_d(1.0945204821124324, 4.2592419842242726e-05) * 1s

# client stream identification
*.MX_4.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f28", packetFilter: expr(has(udp) && udp.destPort == 1028)}
    ]

# client stream encoding
*.MX_4.bridging.streamCoder.encoder.mapping = [
        {stream: "f28", pcp: 5, vlan: 38}
    ]

# =========== Receiving ===========
# No flows

# =============================
#         5
# =============================

*.MX_5.numApps = 3
*.MX_5.hasOutgoingStreams = true

# =========== Sending ===========

# f11: 5 to 10
*.MX_5.app[0].typename = "UdpBasicApp"
*.MX_5.app[0].display-name = "f11"
*.MX_5.app[0].destAddresses = "MX_10"
*.MX_5.app[0].destPort = 1011
*.MX_5.app[0].messageLength = 363B
*.MX_5.app[0].sendInterval = gamma_d(1.0132411340014515, 0.00017395612069547343) * 1s

# f19: 5 to 10
*.MX_5.app[1].typename = "UdpBasicApp"
*.MX_5.app[1].display-name = "f19"
*.MX_5.app[1].destAddresses = "MX_10"
*.MX_5.app[1].destPort = 1019
*.MX_5.app[1].messageLength = 363B
*.MX_5.app[1].sendInterval = gamma_d(1.0032068484691115, 0.00017471364601174928) * 1s

# f29: 5 to 9
*.MX_5.app[2].typename = "UdpBasicApp"
*.MX_5.app[2].display-name = "f29"
*.MX_5.app[2].destAddresses = "MX_9"
*.MX_5.app[2].destPort = 1029
*.MX_5.app[2].messageLength = 363B
*.MX_5.app[2].sendInterval = gamma_d(1.2094025178959011, 1.1364065558502412e-05) * 1s

# client stream identification
*.MX_5.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f11", packetFilter: expr(has(udp) && udp.destPort == 1011)},
        {stream: "f19", packetFilter: expr(has(udp) && udp.destPort == 1019)},
        {stream: "f29", packetFilter: expr(has(udp) && udp.destPort == 1029)}
    ]

# client stream encoding
*.MX_5.bridging.streamCoder.encoder.mapping = [
        {stream: "f11", pcp: 5, vlan: 21},
        {stream: "f19", pcp: 5, vlan: 29},
        {stream: "f29", pcp: 5, vlan: 39}
    ]

# =========== Receiving ===========
# No flows

# =============================
#         6
# =============================

*.MX_6.numApps = 2
*.MX_6.hasOutgoingStreams = true

# =========== Sending ===========

# f9: 6 to 12
*.MX_6.app[0].typename = "UdpBasicApp"
*.MX_6.app[0].display-name = "f9"
*.MX_6.app[0].destAddresses = "MX_12"
*.MX_6.app[0].destPort = 1009
*.MX_6.app[0].messageLength = 363B
*.MX_6.app[0].sendInterval = gamma_d(1.0478315998994243, 0.000122595302062276) * 1s

# f10: 6 to 12
*.MX_6.app[1].typename = "UdpBasicApp"
*.MX_6.app[1].display-name = "f10"
*.MX_6.app[1].destAddresses = "MX_12"
*.MX_6.app[1].destPort = 1010
*.MX_6.app[1].messageLength = 363B
*.MX_6.app[1].sendInterval = gamma_d(1.035417998777445, 0.00012689332246023594) * 1s

# client stream identification
*.MX_6.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f9", packetFilter: expr(has(udp) && udp.destPort == 1009)},
        {stream: "f10", packetFilter: expr(has(udp) && udp.destPort == 1010)}
    ]

# client stream encoding
*.MX_6.bridging.streamCoder.encoder.mapping = [
        {stream: "f9", pcp: 5, vlan: 19},
        {stream: "f10", pcp: 5, vlan: 20}
    ]

# =========== Receiving ===========
# No flows

# =============================
#         7
# =============================

*.MX_7.numApps = 5
*.MX_7.hasOutgoingStreams = true

# =========== Sending ===========

# f5: 7 to 10
*.MX_7.app[0].typename = "UdpBasicApp"
*.MX_7.app[0].display-name = "f5"
*.MX_7.app[0].destAddresses = "MX_10"
*.MX_7.app[0].destPort = 1005
*.MX_7.app[0].messageLength = 363B
*.MX_7.app[0].sendInterval = gamma_d(1.1754824593267907, 1.1159280171245813e-05) * 1s

# f14: 7 to 10
*.MX_7.app[1].typename = "UdpBasicApp"
*.MX_7.app[1].display-name = "f14"
*.MX_7.app[1].destAddresses = "MX_10"
*.MX_7.app[1].destPort = 1014
*.MX_7.app[1].messageLength = 363B
*.MX_7.app[1].sendInterval = gamma_d(1.0370938854049143, 7.162629829885724e-05) * 1s

# f23: 7 to 10
*.MX_7.app[2].typename = "UdpBasicApp"
*.MX_7.app[2].display-name = "f23"
*.MX_7.app[2].destAddresses = "MX_10"
*.MX_7.app[2].destPort = 1023
*.MX_7.app[2].messageLength = 363B
*.MX_7.app[2].sendInterval = gamma_d(1.04925479290769, 6.835901201954163e-05) * 1s

# f24: 7 to 10
*.MX_7.app[3].typename = "UdpBasicApp"
*.MX_7.app[3].display-name = "f24"
*.MX_7.app[3].destAddresses = "MX_10"
*.MX_7.app[3].destPort = 1024
*.MX_7.app[3].messageLength = 363B
*.MX_7.app[3].sendInterval = gamma_d(1.039152831817773, 7.223232791339938e-05) * 1s

# f33: 7 to 10
*.MX_7.app[4].typename = "UdpBasicApp"
*.MX_7.app[4].display-name = "f33"
*.MX_7.app[4].destAddresses = "MX_10"
*.MX_7.app[4].destPort = 1033
*.MX_7.app[4].messageLength = 363B
*.MX_7.app[4].sendInterval = gamma_d(1.0377974038808107, 7.120180839112327e-05) * 1s

# client stream identification
*.MX_7.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f5", packetFilter: expr(has(udp) && udp.destPort == 1005)},
        {stream: "f14", packetFilter: expr(has(udp) && udp.destPort == 1014)},
        {stream: "f23", packetFilter: expr(has(udp) && udp.destPort == 1023)},
        {stream: "f24", packetFilter: expr(has(udp) && udp.destPort == 1024)},
        {stream: "f33", packetFilter: expr(has(udp) && udp.destPort == 1033)}
    ]

# client stream encoding
*.MX_7.bridging.streamCoder.encoder.mapping = [
        {stream: "f5", pcp: 5, vlan: 15},
        {stream: "f14", pcp: 5, vlan: 24},
        {stream: "f23", pcp: 5, vlan: 33},
        {stream: "f24", pcp: 5, vlan: 34},
        {stream: "f33", pcp: 5, vlan: 43}
    ]

# =========== Receiving ===========
# No flows

# =============================
#         8
# =============================

*.MX_8.numApps = 16
*.MX_8.hasOutgoingStreams = true

# =========== Sending ===========

# f0: 8 to 12
*.MX_8.app[0].typename = "UdpBasicApp"
*.MX_8.app[0].display-name = "f0"
*.MX_8.app[0].destAddresses = "MX_12"
*.MX_8.app[0].destPort = 1000
*.MX_8.app[0].messageLength = 363B
*.MX_8.app[0].sendInterval = gamma_d(0.9695316577338969, 0.001179501699483415) * 1s

# f3: 8 to 12
*.MX_8.app[1].typename = "UdpBasicApp"
*.MX_8.app[1].display-name = "f3"
*.MX_8.app[1].destAddresses = "MX_12"
*.MX_8.app[1].destPort = 1003
*.MX_8.app[1].messageLength = 363B
*.MX_8.app[1].sendInterval = gamma_d(0.9695316577338969, 0.001179501699483415) * 1s

# f4: 8 to 12
*.MX_8.app[2].typename = "UdpBasicApp"
*.MX_8.app[2].display-name = "f4"
*.MX_8.app[2].destAddresses = "MX_12"
*.MX_8.app[2].destPort = 1004
*.MX_8.app[2].messageLength = 363B
*.MX_8.app[2].sendInterval = gamma_d(0.9695316577338969, 0.001179501699483415) * 1s

# f6: 8 to 11
*.MX_8.app[3].typename = "UdpBasicApp"
*.MX_8.app[3].display-name = "f6"
*.MX_8.app[3].destAddresses = "MX_11"
*.MX_8.app[3].destPort = 1006
*.MX_8.app[3].messageLength = 363B
*.MX_8.app[3].sendInterval = gamma_d(1.115116456256541, 2.439296088527012e-05) * 1s

# f7: 8 to 10
*.MX_8.app[4].typename = "UdpBasicApp"
*.MX_8.app[4].display-name = "f7"
*.MX_8.app[4].destAddresses = "MX_10"
*.MX_8.app[4].destPort = 1007
*.MX_8.app[4].messageLength = 363B
*.MX_8.app[4].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f15: 8 to 12
*.MX_8.app[5].typename = "UdpBasicApp"
*.MX_8.app[5].display-name = "f15"
*.MX_8.app[5].destAddresses = "MX_12"
*.MX_8.app[5].destPort = 1015
*.MX_8.app[5].messageLength = 363B
*.MX_8.app[5].sendInterval = gamma_d(0.9695316577338969, 0.001179501699483415) * 1s

# f17: 8 to 12
*.MX_8.app[6].typename = "UdpBasicApp"
*.MX_8.app[6].display-name = "f17"
*.MX_8.app[6].destAddresses = "MX_12"
*.MX_8.app[6].destPort = 1017
*.MX_8.app[6].messageLength = 363B
*.MX_8.app[6].sendInterval = gamma_d(0.9695316577338969, 0.001179501699483415) * 1s

# f18: 8 to 11
*.MX_8.app[7].typename = "UdpBasicApp"
*.MX_8.app[7].display-name = "f18"
*.MX_8.app[7].destAddresses = "MX_11"
*.MX_8.app[7].destPort = 1018
*.MX_8.app[7].messageLength = 363B
*.MX_8.app[7].sendInterval = gamma_d(1.1271617200336512, 2.0887436364804555e-05) * 1s

# f22: 8 to 10
*.MX_8.app[8].typename = "UdpBasicApp"
*.MX_8.app[8].display-name = "f22"
*.MX_8.app[8].destAddresses = "MX_10"
*.MX_8.app[8].destPort = 1022
*.MX_8.app[8].messageLength = 363B
*.MX_8.app[8].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f25: 8 to 12
*.MX_8.app[9].typename = "UdpBasicApp"
*.MX_8.app[9].display-name = "f25"
*.MX_8.app[9].destAddresses = "MX_12"
*.MX_8.app[9].destPort = 1025
*.MX_8.app[9].messageLength = 363B
*.MX_8.app[9].sendInterval = gamma_d(0.9695316577338969, 0.001179501699483415) * 1s

# f27: 8 to 11
*.MX_8.app[10].typename = "UdpBasicApp"
*.MX_8.app[10].display-name = "f27"
*.MX_8.app[10].destAddresses = "MX_11"
*.MX_8.app[10].destPort = 1027
*.MX_8.app[10].messageLength = 363B
*.MX_8.app[10].sendInterval = gamma_d(1.1160207307199046, 2.2506820266484867e-05) * 1s

# f30: 8 to 12
*.MX_8.app[11].typename = "UdpBasicApp"
*.MX_8.app[11].display-name = "f30"
*.MX_8.app[11].destAddresses = "MX_12"
*.MX_8.app[11].destPort = 1030
*.MX_8.app[11].messageLength = 363B
*.MX_8.app[11].sendInterval = gamma_d(0.9695316577338969, 0.001179501699483415) * 1s

# f31: 8 to 12
*.MX_8.app[12].typename = "UdpBasicApp"
*.MX_8.app[12].display-name = "f31"
*.MX_8.app[12].destAddresses = "MX_12"
*.MX_8.app[12].destPort = 1031
*.MX_8.app[12].messageLength = 363B
*.MX_8.app[12].sendInterval = gamma_d(0.9695316577338969, 0.001179501699483415) * 1s

# f32: 8 to 12
*.MX_8.app[13].typename = "UdpBasicApp"
*.MX_8.app[13].display-name = "f32"
*.MX_8.app[13].destAddresses = "MX_12"
*.MX_8.app[13].destPort = 1032
*.MX_8.app[13].messageLength = 363B
*.MX_8.app[13].sendInterval = gamma_d(0.9695316577338969, 0.001179501699483415) * 1s

# f34: 8 to 10
*.MX_8.app[14].typename = "UdpBasicApp"
*.MX_8.app[14].display-name = "f34"
*.MX_8.app[14].destAddresses = "MX_10"
*.MX_8.app[14].destPort = 1034
*.MX_8.app[14].messageLength = 363B
*.MX_8.app[14].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f35: 8 to 10
*.MX_8.app[15].typename = "UdpBasicApp"
*.MX_8.app[15].display-name = "f35"
*.MX_8.app[15].destAddresses = "MX_10"
*.MX_8.app[15].destPort = 1035
*.MX_8.app[15].messageLength = 363B
*.MX_8.app[15].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# client stream identification
*.MX_8.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f0", packetFilter: expr(has(udp) && udp.destPort == 1000)},
        {stream: "f3", packetFilter: expr(has(udp) && udp.destPort == 1003)},
        {stream: "f4", packetFilter: expr(has(udp) && udp.destPort == 1004)},
        {stream: "f6", packetFilter: expr(has(udp) && udp.destPort == 1006)},
        {stream: "f7", packetFilter: expr(has(udp) && udp.destPort == 1007)},
        {stream: "f15", packetFilter: expr(has(udp) && udp.destPort == 1015)},
        {stream: "f17", packetFilter: expr(has(udp) && udp.destPort == 1017)},
        {stream: "f18", packetFilter: expr(has(udp) && udp.destPort == 1018)},
        {stream: "f22", packetFilter: expr(has(udp) && udp.destPort == 1022)},
        {stream: "f25", packetFilter: expr(has(udp) && udp.destPort == 1025)},
        {stream: "f27", packetFilter: expr(has(udp) && udp.destPort == 1027)},
        {stream: "f30", packetFilter: expr(has(udp) && udp.destPort == 1030)},
        {stream: "f31", packetFilter: expr(has(udp) && udp.destPort == 1031)},
        {stream: "f32", packetFilter: expr(has(udp) && udp.destPort == 1032)},
        {stream: "f34", packetFilter: expr(has(udp) && udp.destPort == 1034)},
        {stream: "f35", packetFilter: expr(has(udp) && udp.destPort == 1035)}
    ]

# client stream encoding
*.MX_8.bridging.streamCoder.encoder.mapping = [
        {stream: "f0", pcp: 5, vlan: 10},
        {stream: "f3", pcp: 5, vlan: 13},
        {stream: "f4", pcp: 5, vlan: 14},
        {stream: "f6", pcp: 5, vlan: 16},
        {stream: "f7", pcp: 5, vlan: 17},
        {stream: "f15", pcp: 5, vlan: 25},
        {stream: "f17", pcp: 5, vlan: 27},
        {stream: "f18", pcp: 5, vlan: 28},
        {stream: "f22", pcp: 5, vlan: 32},
        {stream: "f25", pcp: 5, vlan: 35},
        {stream: "f27", pcp: 5, vlan: 37},
        {stream: "f30", pcp: 5, vlan: 40},
        {stream: "f31", pcp: 5, vlan: 41},
        {stream: "f32", pcp: 5, vlan: 42},
        {stream: "f34", pcp: 5, vlan: 44},
        {stream: "f35", pcp: 5, vlan: 45}
    ]

# =========== Receiving ===========
# No flows

# =============================
#         9
# =============================

*.MX_9.numApps = 4
*.MX_9.hasOutgoingStreams = false

# =========== Sending ===========

# No flows

# =========== Receiving ===========

# f8: 9 from 3
*.MX_9.app[0].typename = "UdpSinkApp"
*.MX_9.app[0].io.localPort = 1008

# f13: 9 from 1
*.MX_9.app[1].typename = "UdpSinkApp"
*.MX_9.app[1].io.localPort = 1013

# f28: 9 from 4
*.MX_9.app[2].typename = "UdpSinkApp"
*.MX_9.app[2].io.localPort = 1028

# f29: 9 from 5
*.MX_9.app[3].typename = "UdpSinkApp"
*.MX_9.app[3].io.localPort = 1029

# =============================
#         10
# =============================

*.MX_10.numApps = 17
*.MX_10.hasOutgoingStreams = true

# =========== Sending ===========

# f2: 10 to 12
*.MX_10.app[0].typename = "UdpBasicApp"
*.MX_10.app[0].display-name = "f2"
*.MX_10.app[0].destAddresses = "MX_12"
*.MX_10.app[0].destPort = 1002
*.MX_10.app[0].messageLength = 363B
*.MX_10.app[0].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# client stream identification
*.MX_10.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f2", packetFilter: expr(has(udp) && udp.destPort == 1002)}
    ]

# client stream encoding
*.MX_10.bridging.streamCoder.encoder.mapping = [
        {stream: "f2", pcp: 5, vlan: 12}
    ]

# =========== Receiving ===========

# f1: 10 from 1
*.MX_10.app[1].typename = "UdpSinkApp"
*.MX_10.app[1].io.localPort = 1001

# f5: 10 from 7
*.MX_10.app[2].typename = "UdpSinkApp"
*.MX_10.app[2].io.localPort = 1005

# f7: 10 from 8
*.MX_10.app[3].typename = "UdpSinkApp"
*.MX_10.app[3].io.localPort = 1007

# f11: 10 from 5
*.MX_10.app[4].typename = "UdpSinkApp"
*.MX_10.app[4].io.localPort = 1011

# f12: 10 from 1
*.MX_10.app[5].typename = "UdpSinkApp"
*.MX_10.app[5].io.localPort = 1012

# f14: 10 from 7
*.MX_10.app[6].typename = "UdpSinkApp"
*.MX_10.app[6].io.localPort = 1014

# f19: 10 from 5
*.MX_10.app[7].typename = "UdpSinkApp"
*.MX_10.app[7].io.localPort = 1019

# f20: 10 from 1
*.MX_10.app[8].typename = "UdpSinkApp"
*.MX_10.app[8].io.localPort = 1020

# f21: 10 from 1
*.MX_10.app[9].typename = "UdpSinkApp"
*.MX_10.app[9].io.localPort = 1021

# f22: 10 from 8
*.MX_10.app[10].typename = "UdpSinkApp"
*.MX_10.app[10].io.localPort = 1022

# f23: 10 from 7
*.MX_10.app[11].typename = "UdpSinkApp"
*.MX_10.app[11].io.localPort = 1023

# f24: 10 from 7
*.MX_10.app[12].typename = "UdpSinkApp"
*.MX_10.app[12].io.localPort = 1024

# f26: 10 from 1
*.MX_10.app[13].typename = "UdpSinkApp"
*.MX_10.app[13].io.localPort = 1026

# f33: 10 from 7
*.MX_10.app[14].typename = "UdpSinkApp"
*.MX_10.app[14].io.localPort = 1033

# f34: 10 from 8
*.MX_10.app[15].typename = "UdpSinkApp"
*.MX_10.app[15].io.localPort = 1034

# f35: 10 from 8
*.MX_10.app[16].typename = "UdpSinkApp"
*.MX_10.app[16].io.localPort = 1035

# =============================
#         11
# =============================

*.MX_11.numApps = 3
*.MX_11.hasOutgoingStreams = false

# =========== Sending ===========

# No flows

# =========== Receiving ===========

# f6: 11 from 8
*.MX_11.app[0].typename = "UdpSinkApp"
*.MX_11.app[0].io.localPort = 1006

# f18: 11 from 8
*.MX_11.app[1].typename = "UdpSinkApp"
*.MX_11.app[1].io.localPort = 1018

# f27: 11 from 8
*.MX_11.app[2].typename = "UdpSinkApp"
*.MX_11.app[2].io.localPort = 1027

# =============================
#         12
# =============================

*.MX_12.numApps = 13
*.MX_12.hasOutgoingStreams = false

# =========== Sending ===========

# No flows

# =========== Receiving ===========

# f0: 12 from 8
*.MX_12.app[0].typename = "UdpSinkApp"
*.MX_12.app[0].io.localPort = 1000

# f2: 12 from 10
*.MX_12.app[1].typename = "UdpSinkApp"
*.MX_12.app[1].io.localPort = 1002

# f3: 12 from 8
*.MX_12.app[2].typename = "UdpSinkApp"
*.MX_12.app[2].io.localPort = 1003

# f4: 12 from 8
*.MX_12.app[3].typename = "UdpSinkApp"
*.MX_12.app[3].io.localPort = 1004

# f9: 12 from 6
*.MX_12.app[4].typename = "UdpSinkApp"
*.MX_12.app[4].io.localPort = 1009

# f10: 12 from 6
*.MX_12.app[5].typename = "UdpSinkApp"
*.MX_12.app[5].io.localPort = 1010

# f15: 12 from 8
*.MX_12.app[6].typename = "UdpSinkApp"
*.MX_12.app[6].io.localPort = 1015

# f16: 12 from 3
*.MX_12.app[7].typename = "UdpSinkApp"
*.MX_12.app[7].io.localPort = 1016

# f17: 12 from 8
*.MX_12.app[8].typename = "UdpSinkApp"
*.MX_12.app[8].io.localPort = 1017

# f25: 12 from 8
*.MX_12.app[9].typename = "UdpSinkApp"
*.MX_12.app[9].io.localPort = 1025

# f30: 12 from 8
*.MX_12.app[10].typename = "UdpSinkApp"
*.MX_12.app[10].io.localPort = 1030

# f31: 12 from 8
*.MX_12.app[11].typename = "UdpSinkApp"
*.MX_12.app[11].io.localPort = 1031

# f32: 12 from 8
*.MX_12.app[12].typename = "UdpSinkApp"
*.MX_12.app[12].io.localPort = 1032

