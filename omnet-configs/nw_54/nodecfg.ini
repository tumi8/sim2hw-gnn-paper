[General]

network = nw_54.Nw_54

# =============================
#         1
# =============================

*.MX_1.numApps = 6
*.MX_1.hasOutgoingStreams = true

# =========== Sending ===========

# f4: 1 to 9
*.MX_1.app[0].typename = "UdpBasicApp"
*.MX_1.app[0].display-name = "f4"
*.MX_1.app[0].destAddresses = "MX_9"
*.MX_1.app[0].destPort = 1004
*.MX_1.app[0].messageLength = 363B
*.MX_1.app[0].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f11: 1 to 11
*.MX_1.app[1].typename = "UdpBasicApp"
*.MX_1.app[1].display-name = "f11"
*.MX_1.app[1].destAddresses = "MX_11"
*.MX_1.app[1].destPort = 1011
*.MX_1.app[1].messageLength = 363B
*.MX_1.app[1].sendInterval = gamma_d(1.036499659618682, 3.3829787182824124e-05) * 1s

# f12: 1 to 11
*.MX_1.app[2].typename = "UdpBasicApp"
*.MX_1.app[2].display-name = "f12"
*.MX_1.app[2].destAddresses = "MX_11"
*.MX_1.app[2].destPort = 1012
*.MX_1.app[2].messageLength = 363B
*.MX_1.app[2].sendInterval = gamma_d(1.032451763227536, 2.5730077419720157e-05) * 1s

# f13: 1 to 11
*.MX_1.app[3].typename = "UdpBasicApp"
*.MX_1.app[3].display-name = "f13"
*.MX_1.app[3].destAddresses = "MX_11"
*.MX_1.app[3].destPort = 1013
*.MX_1.app[3].messageLength = 363B
*.MX_1.app[3].sendInterval = gamma_d(1.032451763227536, 2.5730077419720157e-05) * 1s

# f14: 1 to 11
*.MX_1.app[4].typename = "UdpBasicApp"
*.MX_1.app[4].display-name = "f14"
*.MX_1.app[4].destAddresses = "MX_11"
*.MX_1.app[4].destPort = 1014
*.MX_1.app[4].messageLength = 363B
*.MX_1.app[4].sendInterval = gamma_d(1.032451763227536, 2.5730077419720157e-05) * 1s

# f15: 1 to 6
*.MX_1.app[5].typename = "UdpBasicApp"
*.MX_1.app[5].display-name = "f15"
*.MX_1.app[5].destAddresses = "MX_6"
*.MX_1.app[5].destPort = 1015
*.MX_1.app[5].messageLength = 363B
*.MX_1.app[5].sendInterval = gamma_d(1.089118700045959, 1.417891511672401e-05) * 1s

# client stream identification
*.MX_1.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f4", packetFilter: expr(has(udp) && udp.destPort == 1004)},
        {stream: "f11", packetFilter: expr(has(udp) && udp.destPort == 1011)},
        {stream: "f12", packetFilter: expr(has(udp) && udp.destPort == 1012)},
        {stream: "f13", packetFilter: expr(has(udp) && udp.destPort == 1013)},
        {stream: "f14", packetFilter: expr(has(udp) && udp.destPort == 1014)},
        {stream: "f15", packetFilter: expr(has(udp) && udp.destPort == 1015)}
    ]

# client stream encoding
*.MX_1.bridging.streamCoder.encoder.mapping = [
        {stream: "f4", pcp: 5, vlan: 14},
        {stream: "f11", pcp: 5, vlan: 21},
        {stream: "f12", pcp: 5, vlan: 22},
        {stream: "f13", pcp: 5, vlan: 23},
        {stream: "f14", pcp: 5, vlan: 24},
        {stream: "f15", pcp: 5, vlan: 25}
    ]

# =========== Receiving ===========
# No flows

# =============================
#         2
# =============================

*.MX_2.numApps = 11
*.MX_2.hasOutgoingStreams = true

# =========== Sending ===========

# f0: 2 to 10
*.MX_2.app[0].typename = "UdpBasicApp"
*.MX_2.app[0].display-name = "f0"
*.MX_2.app[0].destAddresses = "MX_10"
*.MX_2.app[0].destPort = 1000
*.MX_2.app[0].messageLength = 363B
*.MX_2.app[0].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f2: 2 to 8
*.MX_2.app[1].typename = "UdpBasicApp"
*.MX_2.app[1].display-name = "f2"
*.MX_2.app[1].destAddresses = "MX_8"
*.MX_2.app[1].destPort = 1002
*.MX_2.app[1].messageLength = 363B
*.MX_2.app[1].sendInterval = gamma_d(0.9933048445580137, 4.831972869446356e-05) * 1s

# f3: 2 to 8
*.MX_2.app[2].typename = "UdpBasicApp"
*.MX_2.app[2].display-name = "f3"
*.MX_2.app[2].destAddresses = "MX_8"
*.MX_2.app[2].destPort = 1003
*.MX_2.app[2].messageLength = 363B
*.MX_2.app[2].sendInterval = gamma_d(1.0353732397201967, 1.3668357513018444e-05) * 1s

# f6: 2 to 6
*.MX_2.app[3].typename = "UdpBasicApp"
*.MX_2.app[3].display-name = "f6"
*.MX_2.app[3].destAddresses = "MX_6"
*.MX_2.app[3].destPort = 1006
*.MX_2.app[3].messageLength = 363B
*.MX_2.app[3].sendInterval = gamma_d(1.170211184395144, 5.7353422096083756e-06) * 1s

# f7: 2 to 10
*.MX_2.app[4].typename = "UdpBasicApp"
*.MX_2.app[4].display-name = "f7"
*.MX_2.app[4].destAddresses = "MX_10"
*.MX_2.app[4].destPort = 1007
*.MX_2.app[4].messageLength = 363B
*.MX_2.app[4].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f9: 2 to 10
*.MX_2.app[5].typename = "UdpBasicApp"
*.MX_2.app[5].display-name = "f9"
*.MX_2.app[5].destAddresses = "MX_10"
*.MX_2.app[5].destPort = 1009
*.MX_2.app[5].messageLength = 363B
*.MX_2.app[5].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f10: 2 to 10
*.MX_2.app[6].typename = "UdpBasicApp"
*.MX_2.app[6].display-name = "f10"
*.MX_2.app[6].destAddresses = "MX_10"
*.MX_2.app[6].destPort = 1010
*.MX_2.app[6].messageLength = 363B
*.MX_2.app[6].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f16: 2 to 10
*.MX_2.app[7].typename = "UdpBasicApp"
*.MX_2.app[7].display-name = "f16"
*.MX_2.app[7].destAddresses = "MX_10"
*.MX_2.app[7].destPort = 1016
*.MX_2.app[7].messageLength = 363B
*.MX_2.app[7].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f17: 2 to 10
*.MX_2.app[8].typename = "UdpBasicApp"
*.MX_2.app[8].display-name = "f17"
*.MX_2.app[8].destAddresses = "MX_10"
*.MX_2.app[8].destPort = 1017
*.MX_2.app[8].messageLength = 363B
*.MX_2.app[8].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# f22: 2 to 8
*.MX_2.app[9].typename = "UdpBasicApp"
*.MX_2.app[9].display-name = "f22"
*.MX_2.app[9].destAddresses = "MX_8"
*.MX_2.app[9].destPort = 1022
*.MX_2.app[9].messageLength = 363B
*.MX_2.app[9].sendInterval = gamma_d(0.9933048445580137, 4.831972869446356e-05) * 1s

# f23: 2 to 10
*.MX_2.app[10].typename = "UdpBasicApp"
*.MX_2.app[10].display-name = "f23"
*.MX_2.app[10].destAddresses = "MX_10"
*.MX_2.app[10].destPort = 1023
*.MX_2.app[10].messageLength = 363B
*.MX_2.app[10].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# client stream identification
*.MX_2.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f0", packetFilter: expr(has(udp) && udp.destPort == 1000)},
        {stream: "f2", packetFilter: expr(has(udp) && udp.destPort == 1002)},
        {stream: "f3", packetFilter: expr(has(udp) && udp.destPort == 1003)},
        {stream: "f6", packetFilter: expr(has(udp) && udp.destPort == 1006)},
        {stream: "f7", packetFilter: expr(has(udp) && udp.destPort == 1007)},
        {stream: "f9", packetFilter: expr(has(udp) && udp.destPort == 1009)},
        {stream: "f10", packetFilter: expr(has(udp) && udp.destPort == 1010)},
        {stream: "f16", packetFilter: expr(has(udp) && udp.destPort == 1016)},
        {stream: "f17", packetFilter: expr(has(udp) && udp.destPort == 1017)},
        {stream: "f22", packetFilter: expr(has(udp) && udp.destPort == 1022)},
        {stream: "f23", packetFilter: expr(has(udp) && udp.destPort == 1023)}
    ]

# client stream encoding
*.MX_2.bridging.streamCoder.encoder.mapping = [
        {stream: "f0", pcp: 5, vlan: 10},
        {stream: "f2", pcp: 5, vlan: 12},
        {stream: "f3", pcp: 5, vlan: 13},
        {stream: "f6", pcp: 5, vlan: 16},
        {stream: "f7", pcp: 5, vlan: 17},
        {stream: "f9", pcp: 5, vlan: 19},
        {stream: "f10", pcp: 5, vlan: 20},
        {stream: "f16", pcp: 5, vlan: 26},
        {stream: "f17", pcp: 5, vlan: 27},
        {stream: "f22", pcp: 5, vlan: 32},
        {stream: "f23", pcp: 5, vlan: 33}
    ]

# =========== Receiving ===========
# No flows

# =============================
#         3
# =============================

*.MX_3.numApps = 3
*.MX_3.hasOutgoingStreams = true

# =========== Sending ===========

# f8: 3 to 9
*.MX_3.app[0].typename = "UdpBasicApp"
*.MX_3.app[0].display-name = "f8"
*.MX_3.app[0].destAddresses = "MX_9"
*.MX_3.app[0].destPort = 1008
*.MX_3.app[0].messageLength = 363B
*.MX_3.app[0].sendInterval = gamma_d(1.0261384186550355, 2.6832016129147005e-05) * 1s

# f18: 3 to 9
*.MX_3.app[1].typename = "UdpBasicApp"
*.MX_3.app[1].display-name = "f18"
*.MX_3.app[1].destAddresses = "MX_9"
*.MX_3.app[1].destPort = 1018
*.MX_3.app[1].messageLength = 363B
*.MX_3.app[1].sendInterval = gamma_d(1.0448089108278833, 1.7313127417414427e-05) * 1s

# f21: 3 to 9
*.MX_3.app[2].typename = "UdpBasicApp"
*.MX_3.app[2].display-name = "f21"
*.MX_3.app[2].destAddresses = "MX_9"
*.MX_3.app[2].destPort = 1021
*.MX_3.app[2].messageLength = 363B
*.MX_3.app[2].sendInterval = gamma_d(1.0641022561674183, 1.9601789376064644e-05) * 1s

# client stream identification
*.MX_3.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f8", packetFilter: expr(has(udp) && udp.destPort == 1008)},
        {stream: "f18", packetFilter: expr(has(udp) && udp.destPort == 1018)},
        {stream: "f21", packetFilter: expr(has(udp) && udp.destPort == 1021)}
    ]

# client stream encoding
*.MX_3.bridging.streamCoder.encoder.mapping = [
        {stream: "f8", pcp: 5, vlan: 18},
        {stream: "f18", pcp: 5, vlan: 28},
        {stream: "f21", pcp: 5, vlan: 31}
    ]

# =========== Receiving ===========
# No flows

# =============================
#         4
# =============================

*.MX_4.numApps = 3
*.MX_4.hasOutgoingStreams = true

# =========== Sending ===========

# f1: 4 to 7
*.MX_4.app[0].typename = "UdpBasicApp"
*.MX_4.app[0].display-name = "f1"
*.MX_4.app[0].destAddresses = "MX_7"
*.MX_4.app[0].destPort = 1001
*.MX_4.app[0].messageLength = 363B
*.MX_4.app[0].sendInterval = gamma_d(1.086576222160723, 1.1674121282354524e-05) * 1s

# f5: 4 to 11
*.MX_4.app[1].typename = "UdpBasicApp"
*.MX_4.app[1].display-name = "f5"
*.MX_4.app[1].destAddresses = "MX_11"
*.MX_4.app[1].destPort = 1005
*.MX_4.app[1].messageLength = 363B
*.MX_4.app[1].sendInterval = gamma_d(1.0660493252830803, 2.325851216441348e-05) * 1s

# f20: 4 to 10
*.MX_4.app[2].typename = "UdpBasicApp"
*.MX_4.app[2].display-name = "f20"
*.MX_4.app[2].destAddresses = "MX_10"
*.MX_4.app[2].destPort = 1020
*.MX_4.app[2].messageLength = 363B
*.MX_4.app[2].sendInterval = gamma_d(0.9954140347503732, 0.0030665963193552033) * 1s

# client stream identification
*.MX_4.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f1", packetFilter: expr(has(udp) && udp.destPort == 1001)},
        {stream: "f5", packetFilter: expr(has(udp) && udp.destPort == 1005)},
        {stream: "f20", packetFilter: expr(has(udp) && udp.destPort == 1020)}
    ]

# client stream encoding
*.MX_4.bridging.streamCoder.encoder.mapping = [
        {stream: "f1", pcp: 5, vlan: 11},
        {stream: "f5", pcp: 5, vlan: 15},
        {stream: "f20", pcp: 5, vlan: 30}
    ]

# =========== Receiving ===========
# No flows

# =============================
#         5
# =============================

*.MX_5.numApps = 1
*.MX_5.hasOutgoingStreams = true

# =========== Sending ===========

# f19: 5 to 10
*.MX_5.app[0].typename = "UdpBasicApp"
*.MX_5.app[0].display-name = "f19"
*.MX_5.app[0].destAddresses = "MX_10"
*.MX_5.app[0].destPort = 1019
*.MX_5.app[0].messageLength = 363B
*.MX_5.app[0].sendInterval = gamma_d(1.1358525622091575, 1.2839966017758464e-05) * 1s

# client stream identification
*.MX_5.bridging.streamIdentifier.identifier.mapping = [
        {stream: "f19", packetFilter: expr(has(udp) && udp.destPort == 1019)}
    ]

# client stream encoding
*.MX_5.bridging.streamCoder.encoder.mapping = [
        {stream: "f19", pcp: 5, vlan: 29}
    ]

# =========== Receiving ===========
# No flows

# =============================
#         6
# =============================

*.MX_6.numApps = 2
*.MX_6.hasOutgoingStreams = false

# =========== Sending ===========

# No flows

# =========== Receiving ===========

# f6: 6 from 2
*.MX_6.app[0].typename = "UdpSinkApp"
*.MX_6.app[0].io.localPort = 1006

# f15: 6 from 1
*.MX_6.app[1].typename = "UdpSinkApp"
*.MX_6.app[1].io.localPort = 1015

# =============================
#         7
# =============================

*.MX_7.numApps = 1
*.MX_7.hasOutgoingStreams = false

# =========== Sending ===========

# No flows

# =========== Receiving ===========

# f1: 7 from 4
*.MX_7.app[0].typename = "UdpSinkApp"
*.MX_7.app[0].io.localPort = 1001

# =============================
#         8
# =============================

*.MX_8.numApps = 3
*.MX_8.hasOutgoingStreams = false

# =========== Sending ===========

# No flows

# =========== Receiving ===========

# f2: 8 from 2
*.MX_8.app[0].typename = "UdpSinkApp"
*.MX_8.app[0].io.localPort = 1002

# f3: 8 from 2
*.MX_8.app[1].typename = "UdpSinkApp"
*.MX_8.app[1].io.localPort = 1003

# f22: 8 from 2
*.MX_8.app[2].typename = "UdpSinkApp"
*.MX_8.app[2].io.localPort = 1022

# =============================
#         9
# =============================

*.MX_9.numApps = 4
*.MX_9.hasOutgoingStreams = false

# =========== Sending ===========

# No flows

# =========== Receiving ===========

# f4: 9 from 1
*.MX_9.app[0].typename = "UdpSinkApp"
*.MX_9.app[0].io.localPort = 1004

# f8: 9 from 3
*.MX_9.app[1].typename = "UdpSinkApp"
*.MX_9.app[1].io.localPort = 1008

# f18: 9 from 3
*.MX_9.app[2].typename = "UdpSinkApp"
*.MX_9.app[2].io.localPort = 1018

# f21: 9 from 3
*.MX_9.app[3].typename = "UdpSinkApp"
*.MX_9.app[3].io.localPort = 1021

# =============================
#         10
# =============================

*.MX_10.numApps = 9
*.MX_10.hasOutgoingStreams = false

# =========== Sending ===========

# No flows

# =========== Receiving ===========

# f0: 10 from 2
*.MX_10.app[0].typename = "UdpSinkApp"
*.MX_10.app[0].io.localPort = 1000

# f7: 10 from 2
*.MX_10.app[1].typename = "UdpSinkApp"
*.MX_10.app[1].io.localPort = 1007

# f9: 10 from 2
*.MX_10.app[2].typename = "UdpSinkApp"
*.MX_10.app[2].io.localPort = 1009

# f10: 10 from 2
*.MX_10.app[3].typename = "UdpSinkApp"
*.MX_10.app[3].io.localPort = 1010

# f16: 10 from 2
*.MX_10.app[4].typename = "UdpSinkApp"
*.MX_10.app[4].io.localPort = 1016

# f17: 10 from 2
*.MX_10.app[5].typename = "UdpSinkApp"
*.MX_10.app[5].io.localPort = 1017

# f19: 10 from 5
*.MX_10.app[6].typename = "UdpSinkApp"
*.MX_10.app[6].io.localPort = 1019

# f20: 10 from 4
*.MX_10.app[7].typename = "UdpSinkApp"
*.MX_10.app[7].io.localPort = 1020

# f23: 10 from 2
*.MX_10.app[8].typename = "UdpSinkApp"
*.MX_10.app[8].io.localPort = 1023

# =============================
#         11
# =============================

*.MX_11.numApps = 5
*.MX_11.hasOutgoingStreams = false

# =========== Sending ===========

# No flows

# =========== Receiving ===========

# f5: 11 from 4
*.MX_11.app[0].typename = "UdpSinkApp"
*.MX_11.app[0].io.localPort = 1005

# f11: 11 from 1
*.MX_11.app[1].typename = "UdpSinkApp"
*.MX_11.app[1].io.localPort = 1011

# f12: 11 from 1
*.MX_11.app[2].typename = "UdpSinkApp"
*.MX_11.app[2].io.localPort = 1012

# f13: 11 from 1
*.MX_11.app[3].typename = "UdpSinkApp"
*.MX_11.app[3].io.localPort = 1013

# f14: 11 from 1
*.MX_11.app[4].typename = "UdpSinkApp"
*.MX_11.app[4].io.localPort = 1014

